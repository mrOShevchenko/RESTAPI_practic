// Code generated by mockery v2.30.1. DO NOT EDIT.

package mocks

import (
	echo "github.com/labstack/echo/v4"

	mock "github.com/stretchr/testify/mock"
)

// AuthMiddleware is an autogenerated mock type for the AuthMiddleware type
type AuthMiddleware struct {
	mock.Mock
}

// JWT provides a mock function with given fields: secret
func (_m *AuthMiddleware) JWT(secret string) echo.MiddlewareFunc {
	ret := _m.Called(secret)

	var r0 echo.MiddlewareFunc
	if rf, ok := ret.Get(0).(func(string) echo.MiddlewareFunc); ok {
		r0 = rf(secret)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(echo.MiddlewareFunc)
		}
	}

	return r0
}

// ValidateJWT provides a mock function with given fields:
func (_m *AuthMiddleware) ValidateJWT() echo.MiddlewareFunc {
	ret := _m.Called()

	var r0 echo.MiddlewareFunc
	if rf, ok := ret.Get(0).(func() echo.MiddlewareFunc); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(echo.MiddlewareFunc)
		}
	}

	return r0
}

// NewAuthMiddleware creates a new instance of AuthMiddleware. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewAuthMiddleware(t interface {
	mock.TestingT
	Cleanup(func())
}) *AuthMiddleware {
	mock := &AuthMiddleware{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
